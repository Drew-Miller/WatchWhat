type Query {
  ping: String!
  trending(page: Int): Page!
  popularMovies(page: Int): Page!
  popularTV(page: Int): Page!
  movie(id: Int): Movie!
}

type Page {
  page: Int!
  totalPages: Int!
  totalResults: Int!
  results: [Pageable!]!
}

union Pageable = Watchable

type Watchable {
  id: Int!
  imdbId: String
  title: String!
  mediaType: String!
  backdropPath: String
  posterPath: String!
  genreIds: [Int!]!
  rating: String
  releaseDate: String!
  voteAverage: Float!
}

type Movie {
  id: Int!
  imdbId: String
  title: String!
  overview: String!
  posterPath: String!
  backdropPath: String
  genres: [Genre!]!
  rating: String
  releaseDate: String!
  voteAverage: Float!
}

type Genre {
  id: Int!
  name: String!
}